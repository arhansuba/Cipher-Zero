{
  "contractName": "MockTNT20",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/jieyilong/Theta/go/src/github.com/thetatoken/theta-protocol-subchain-management/contracts/mocks/MocksTNT20.sol\":\"MockTNT20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"/Users/jieyilong/Theta/go/src/github.com/thetatoken/theta-protocol-subchain-management/contracts/mocks/MocksTNT20.sol\":{\"keccak256\":\"0xdf56f86e1ba6a49d08af644e58281d5021181a7a54cfb23347158c15efb2f3de\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9ef6957fd8445f74a179fb3a474f753b47f74cbabe5372c429aab11811a53af7\",\"dweb:/ipfs/QmWSS4eamTGivDy2imovVoc6iD1jqzGnVnpKEYyzVhh9Gt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe0c8b625a79bac0fe80f17cfb521e072805cc9cef1c96a5caf45b264e74812fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fd1efc9ad061ef675bd50fb0c8e3c6f2952a09f8df0e3c688b8d81b8918838\",\"dweb:/ipfs/QmawN6PjTwy91pU7ANjCSgbsLc8TDA6hwu9GsFFaNSuhb5\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604080518082018252600a8082526904d6f636b5f544e5432360b41b60208084018281528551808701909652928552840152815191929161005491600391610070565b508051610068906004906020840190610070565b505050610144565b82805461007c90610109565b90600052602060002090601f01602090048101928261009e57600085556100e4565b82601f106100b757805160ff19168380011785556100e4565b828001600101855582156100e4579182015b828111156100e45782518255916020019190600101906100c9565b506100f09291506100f4565b5090565b5b808211156100f057600081556001016100f5565b600181811c9082168061011d57607f821691505b6020821081141561013e57634e487b7160e01b600052602260045260246000fd5b50919050565b610994806101536000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461014157806370a082311461015657806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101c0565b6040516100ce91906108a8565b60405180910390f35b6100ea6100e536600461087e565b610252565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a366004610842565b61026a565b604051601281526020016100ce565b6100ea61013c36600461087e565b61028e565b61015461014f36600461087e565b6102b0565b005b6100fe6101643660046107ed565b6001600160a01b031660009081526020819052604090205490565b6100c16102be565b6100ea61019536600461087e565b6102cd565b6100ea6101a836600461087e565b61034d565b6100fe6101bb36600461080f565b61035b565b6060600380546101cf90610923565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb90610923565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b600033610260818585610386565b5060019392505050565b6000336102788582856104aa565b610283858585610524565b506001949350505050565b6000336102608185856102a1838361035b565b6102ab91906108fd565b610386565b6102ba82826106f2565b5050565b6060600480546101cf90610923565b600033816102db828661035b565b9050838110156103405760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102838286868403610386565b600033610260818585610524565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103e85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610337565b6001600160a01b0382166104495760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610337565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104b6848461035b565b9050600019811461051e57818110156105115760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610337565b61051e8484848403610386565b50505050565b6001600160a01b0383166105885760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610337565b6001600160a01b0382166105ea5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610337565b6001600160a01b038316600090815260208190526040902054818110156106625760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610337565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106999084906108fd565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106e591815260200190565b60405180910390a361051e565b6001600160a01b0382166107485760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610337565b806002600082825461075a91906108fd565b90915550506001600160a01b038216600090815260208190526040812080548392906107879084906108fd565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b03811681146107e857600080fd5b919050565b6000602082840312156107ff57600080fd5b610808826107d1565b9392505050565b6000806040838503121561082257600080fd5b61082b836107d1565b9150610839602084016107d1565b90509250929050565b60008060006060848603121561085757600080fd5b610860846107d1565b925061086e602085016107d1565b9150604084013590509250925092565b6000806040838503121561089157600080fd5b61089a836107d1565b946020939093013593505050565b600060208083528351808285015260005b818110156108d5578581018301518582016040015282016108b9565b818111156108e7576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561091e57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061093757607f821691505b6020821081141561095857634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212204540cb12ba5072fed41ef93812aa002dc180aca14cf129470c37689dcb58ffc464736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461014157806370a082311461015657806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101c0565b6040516100ce91906108a8565b60405180910390f35b6100ea6100e536600461087e565b610252565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a366004610842565b61026a565b604051601281526020016100ce565b6100ea61013c36600461087e565b61028e565b61015461014f36600461087e565b6102b0565b005b6100fe6101643660046107ed565b6001600160a01b031660009081526020819052604090205490565b6100c16102be565b6100ea61019536600461087e565b6102cd565b6100ea6101a836600461087e565b61034d565b6100fe6101bb36600461080f565b61035b565b6060600380546101cf90610923565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb90610923565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b600033610260818585610386565b5060019392505050565b6000336102788582856104aa565b610283858585610524565b506001949350505050565b6000336102608185856102a1838361035b565b6102ab91906108fd565b610386565b6102ba82826106f2565b5050565b6060600480546101cf90610923565b600033816102db828661035b565b9050838110156103405760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102838286868403610386565b600033610260818585610524565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103e85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610337565b6001600160a01b0382166104495760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610337565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104b6848461035b565b9050600019811461051e57818110156105115760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610337565b61051e8484848403610386565b50505050565b6001600160a01b0383166105885760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610337565b6001600160a01b0382166105ea5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610337565b6001600160a01b038316600090815260208190526040902054818110156106625760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610337565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106999084906108fd565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106e591815260200190565b60405180910390a361051e565b6001600160a01b0382166107485760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610337565b806002600082825461075a91906108fd565b90915550506001600160a01b038216600090815260208190526040812080548392906107879084906108fd565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b03811681146107e857600080fd5b919050565b6000602082840312156107ff57600080fd5b610808826107d1565b9392505050565b6000806040838503121561082257600080fd5b61082b836107d1565b9150610839602084016107d1565b90509250929050565b60008060006060848603121561085757600080fd5b610860846107d1565b925061086e602085016107d1565b9150604084013590509250925092565b6000806040838503121561089157600080fd5b61089a836107d1565b946020939093013593505050565b600060208083528351808285015260005b818110156108d5578581018301518582016040015282016108b9565b818111156108e7576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561091e57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061093757607f821691505b6020821081141561095857634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212204540cb12ba5072fed41ef93812aa002dc180aca14cf129470c37689dcb58ffc464736f6c63430008070033",
  "immutableReferences": {},
  "sourceMap": "177:220:12:-:0;;;244:50;;;;;;;;;-1:-1:-1;1978:113:22;;;;;;;;;;;;-1:-1:-1;;;1978:113:22;;;;;;;;;;;;;;;;;;;;;2044:13;;1978:113;;;2044:13;;:5;;:13;:::i;:::-;-1:-1:-1;2067:17:22;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;177:220:12;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;177:220:12;;;-1:-1:-1;177:220:12;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:36;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;177:220:12;;;;;;",
  "deployedSourceMap": "177:220:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1405:14:36;;1398:22;1380:41;;1368:2;1353:18;4433:197:22;1240:187:36;3244:106:22;3331:12;;3244:106;;;5329:25:36;;;5317:2;5302:18;3244:106:22;5183:177:36;5192:286:22;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;5507:36:36;;5495:2;5480:18;3093:91:22;5365:184:36;5873:234:22;;;;;;:::i;:::-;;:::i;300:95:12:-;;;;;;:::i;:::-;;:::i;:::-;;3408:125:22;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:22;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;;:::i;2156:98::-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:30;4570:32:22;719:10:30;4586:7:22;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:22;;4433:197;-1:-1:-1;;;4433:197:22:o;5192:286::-;5319:4;719:10:30;5375:38:22;5391:4;719:10:30;5406:6:22;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:22;;5192:286;-1:-1:-1;;;;5192:286:22:o;5873:234::-;5961:4;719:10:30;6015:64:22;719:10:30;6031:7:22;6068:10;6040:25;719:10:30;6031:7:22;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;300:95:12:-;366:22;372:7;381:6;366:5;:22::i;:::-;300:95;;:::o;2367:102:22:-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:30;6687:4:22;6768:25;719:10:30;6785:7:22;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:22;;4619:2:36;6803:85:22;;;4601:21:36;4658:2;4638:18;;;4631:30;4697:34;4677:18;;;4670:62;-1:-1:-1;;;4748:18:36;;;4741:35;4793:19;;6803:85:22;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:30;3862:28:22;719:10:30;3879:2:22;3883:6;3862:9;:28::i;3976:149::-;-1:-1:-1;;;;;4091:18:22;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;10119:370::-;-1:-1:-1;;;;;10250:19:22;;10242:68;;;;-1:-1:-1;;;10242:68:22;;4214:2:36;10242:68:22;;;4196:21:36;4253:2;4233:18;;;4226:30;4292:34;4272:18;;;4265:62;-1:-1:-1;;;4343:18:36;;;4336:34;4387:19;;10242:68:22;4012:400:36;10242:68:22;-1:-1:-1;;;;;10328:21:22;;10320:68;;;;-1:-1:-1;;;10320:68:22;;2640:2:36;10320:68:22;;;2622:21:36;2679:2;2659:18;;;2652:30;2718:34;2698:18;;;2691:62;-1:-1:-1;;;2769:18:36;;;2762:32;2811:19;;10320:68:22;2438:398:36;10320:68:22;-1:-1:-1;;;;;10399:18:22;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10450:32;;5329:25:36;;;10450:32:22;;5302:18:36;10450:32:22;;;;;;;10119:370;;;:::o;10770:441::-;10900:24;10927:25;10937:5;10944:7;10927:9;:25::i;:::-;10900:52;;-1:-1:-1;;10966:16:22;:37;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:22;;3043:2:36;11019:68:22;;;3025:21:36;3082:2;3062:18;;;3055:30;3121:31;3101:18;;;3094:59;3170:18;;11019:68:22;2841:353:36;11019:68:22;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10890:321;10770:441;;;:::o;7484:651::-;-1:-1:-1;;;;;7610:18:22;;7602:68;;;;-1:-1:-1;;;7602:68:22;;3808:2:36;7602:68:22;;;3790:21:36;3847:2;3827:18;;;3820:30;3886:34;3866:18;;;3859:62;-1:-1:-1;;;3937:18:36;;;3930:35;3982:19;;7602:68:22;3606:401:36;7602:68:22;-1:-1:-1;;;;;7688:16:22;;7680:64;;;;-1:-1:-1;;;7680:64:22;;2236:2:36;7680:64:22;;;2218:21:36;2275:2;2255:18;;;2248:30;2314:34;2294:18;;;2287:62;-1:-1:-1;;;2365:18:36;;;2358:33;2408:19;;7680:64:22;2034:399:36;7680:64:22;-1:-1:-1;;;;;7826:15:22;;7804:19;7826:15;;;;;;;;;;;7859:21;;;;7851:72;;;;-1:-1:-1;;;7851:72:22;;3401:2:36;7851:72:22;;;3383:21:36;3440:2;3420:18;;;3413:30;3479:34;3459:18;;;3452:62;-1:-1:-1;;;3530:18:36;;;3523:36;3576:19;;7851:72:22;3199:402:36;7851:72:22;-1:-1:-1;;;;;7957:15:22;;;:9;:15;;;;;;;;;;;7975:20;;;7957:38;;8015:13;;;;;;;;:23;;7989:6;;7957:9;8015:23;;7989:6;;8015:23;:::i;:::-;;;;;;;;8069:2;-1:-1:-1;;;;;8054:26:22;8063:4;-1:-1:-1;;;;;8054:26:22;;8073:6;8054:26;;;;5329:25:36;;5317:2;5302:18;;5183:177;8054:26:22;;;;;;;;8091:37;11795:121;8411:389;-1:-1:-1;;;;;8494:21:22;;8486:65;;;;-1:-1:-1;;;8486:65:22;;5025:2:36;8486:65:22;;;5007:21:36;5064:2;5044:18;;;5037:30;5103:33;5083:18;;;5076:61;5154:18;;8486:65:22;4823:355:36;8486:65:22;8638:6;8622:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8654:18:22;;:9;:18;;;;;;;;;;:28;;8676:6;;8654:9;:28;;8676:6;;8654:28;:::i;:::-;;;;-1:-1:-1;;8697:37:22;;5329:25:36;;;-1:-1:-1;;;;;8697:37:22;;;8714:1;;8697:37;;5317:2:36;5302:18;8697:37:22;;;;;;;300:95:12;;:::o;14:173:36:-;82:20;;-1:-1:-1;;;;;131:31:36;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:36:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:36:o;1432:597::-;1544:4;1573:2;1602;1591:9;1584:21;1634:6;1628:13;1677:6;1672:2;1661:9;1657:18;1650:34;1702:1;1712:140;1726:6;1723:1;1720:13;1712:140;;;1821:14;;;1817:23;;1811:30;1787:17;;;1806:2;1783:26;1776:66;1741:10;;1712:140;;;1870:6;1867:1;1864:13;1861:91;;;1940:1;1935:2;1926:6;1915:9;1911:22;1907:31;1900:42;1861:91;-1:-1:-1;2013:2:36;1992:15;-1:-1:-1;;1988:29:36;1973:45;;;;2020:2;1969:54;;1432:597;-1:-1:-1;;;1432:597:36:o;5554:225::-;5594:3;5625:1;5621:6;5618:1;5615:13;5612:136;;;5670:10;5665:3;5661:20;5658:1;5651:31;5705:4;5702:1;5695:15;5733:4;5730:1;5723:15;5612:136;-1:-1:-1;5764:9:36;;5554:225::o;5784:380::-;5863:1;5859:12;;;;5906;;;5927:61;;5981:4;5973:6;5969:17;5959:27;;5927:61;6034:2;6026:6;6023:14;6003:18;6000:38;5997:161;;;6080:10;6075:3;6071:20;6068:1;6061:31;6115:4;6112:1;6105:15;6143:4;6140:1;6133:15;5997:161;;5784:380;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity ^0.8.7;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract MockTNT20 is ERC20 {\n    using SafeMath for uint256;\n\n    constructor() ERC20(\"Mock_TNT20\", \"Mock_TNT20\") {}\n\n    function mint(address account, uint256 amount) external {\n        _mint(account, amount);\n    }\n}",
  "sourcePath": "/Users/jieyilong/Theta/go/src/github.com/thetatoken/theta-protocol-subchain-management/contracts/mocks/MocksTNT20.sol",
  "ast": {
    "absolutePath": "/Users/jieyilong/Theta/go/src/github.com/thetatoken/theta-protocol-subchain-management/contracts/mocks/MocksTNT20.sol",
    "exportedSymbols": {
      "Context": [
        13806
      ],
      "ERC20": [
        12359
      ],
      "IERC20": [
        12437
      ],
      "IERC20Metadata": [
        12462
      ],
      "MockTNT20": [
        10188
      ],
      "SafeMath": [
        14764
      ]
    },
    "id": 10189,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10159,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:12"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 10160,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10189,
        "sourceUnit": 14765,
        "src": "62:57:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 10161,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10189,
        "sourceUnit": 12360,
        "src": "120:55:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10162,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12359,
              "src": "199:5:12"
            },
            "id": 10163,
            "nodeType": "InheritanceSpecifier",
            "src": "199:5:12"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10188,
        "linearizedBaseContracts": [
          10188,
          12359,
          12462,
          12437,
          13806
        ],
        "name": "MockTNT20",
        "nameLocation": "186:9:12",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10166,
            "libraryName": {
              "id": 10164,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14764,
              "src": "217:8:12"
            },
            "nodeType": "UsingForDirective",
            "src": "211:27:12",
            "typeName": {
              "id": 10165,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "230:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 10173,
              "nodeType": "Block",
              "src": "292:2:12",
              "statements": []
            },
            "id": 10174,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4d6f636b5f544e543230",
                    "id": 10169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "264:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d9fc97100520cf7ab00618c126ffdf31547f50debbedca5e5c1d17ca7d2f32b1",
                      "typeString": "literal_string \"Mock_TNT20\""
                    },
                    "value": "Mock_TNT20"
                  },
                  {
                    "hexValue": "4d6f636b5f544e543230",
                    "id": 10170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "278:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d9fc97100520cf7ab00618c126ffdf31547f50debbedca5e5c1d17ca7d2f32b1",
                      "typeString": "literal_string \"Mock_TNT20\""
                    },
                    "value": "Mock_TNT20"
                  }
                ],
                "id": 10171,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 10168,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12359,
                  "src": "258:5:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "258:33:12"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "255:2:12"
            },
            "returnParameters": {
              "id": 10172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "292:0:12"
            },
            "scope": 10188,
            "src": "244:50:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10186,
              "nodeType": "Block",
              "src": "356:39:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10182,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10176,
                        "src": "372:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10183,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10178,
                        "src": "381:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10181,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12176,
                      "src": "366:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "366:22:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10185,
                  "nodeType": "ExpressionStatement",
                  "src": "366:22:12"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 10187,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "309:4:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10176,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "322:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 10187,
                  "src": "314:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10178,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "339:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 10187,
                  "src": "331:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "331:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "313:33:12"
            },
            "returnParameters": {
              "id": 10180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "356:0:12"
            },
            "scope": 10188,
            "src": "300:95:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10189,
        "src": "177:220:12",
        "usedErrors": []
      }
    ],
    "src": "37:360:12"
  },
  "legacyAST": {
    "absolutePath": "/Users/jieyilong/Theta/go/src/github.com/thetatoken/theta-protocol-subchain-management/contracts/mocks/MocksTNT20.sol",
    "exportedSymbols": {
      "Context": [
        13806
      ],
      "ERC20": [
        12359
      ],
      "IERC20": [
        12437
      ],
      "IERC20Metadata": [
        12462
      ],
      "MockTNT20": [
        10188
      ],
      "SafeMath": [
        14764
      ]
    },
    "id": 10189,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10159,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:12"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 10160,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10189,
        "sourceUnit": 14765,
        "src": "62:57:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 10161,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10189,
        "sourceUnit": 12360,
        "src": "120:55:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10162,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12359,
              "src": "199:5:12"
            },
            "id": 10163,
            "nodeType": "InheritanceSpecifier",
            "src": "199:5:12"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10188,
        "linearizedBaseContracts": [
          10188,
          12359,
          12462,
          12437,
          13806
        ],
        "name": "MockTNT20",
        "nameLocation": "186:9:12",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10166,
            "libraryName": {
              "id": 10164,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14764,
              "src": "217:8:12"
            },
            "nodeType": "UsingForDirective",
            "src": "211:27:12",
            "typeName": {
              "id": 10165,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "230:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 10173,
              "nodeType": "Block",
              "src": "292:2:12",
              "statements": []
            },
            "id": 10174,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4d6f636b5f544e543230",
                    "id": 10169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "264:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d9fc97100520cf7ab00618c126ffdf31547f50debbedca5e5c1d17ca7d2f32b1",
                      "typeString": "literal_string \"Mock_TNT20\""
                    },
                    "value": "Mock_TNT20"
                  },
                  {
                    "hexValue": "4d6f636b5f544e543230",
                    "id": 10170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "278:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d9fc97100520cf7ab00618c126ffdf31547f50debbedca5e5c1d17ca7d2f32b1",
                      "typeString": "literal_string \"Mock_TNT20\""
                    },
                    "value": "Mock_TNT20"
                  }
                ],
                "id": 10171,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 10168,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12359,
                  "src": "258:5:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "258:33:12"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "255:2:12"
            },
            "returnParameters": {
              "id": 10172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "292:0:12"
            },
            "scope": 10188,
            "src": "244:50:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10186,
              "nodeType": "Block",
              "src": "356:39:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10182,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10176,
                        "src": "372:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10183,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10178,
                        "src": "381:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10181,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12176,
                      "src": "366:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "366:22:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10185,
                  "nodeType": "ExpressionStatement",
                  "src": "366:22:12"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 10187,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "309:4:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10176,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "322:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 10187,
                  "src": "314:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10178,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "339:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 10187,
                  "src": "331:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "331:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "313:33:12"
            },
            "returnParameters": {
              "id": 10180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "356:0:12"
            },
            "scope": 10188,
            "src": "300:95:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10189,
        "src": "177:220:12",
        "usedErrors": []
      }
    ],
    "src": "37:360:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {
    "365": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x83eE1dF180b3Fa436D8Fe83B4AB40589e4dBBd0A",
      "transactionHash": "0x3c10469960244c674c7e0a8254909eec26e25a50d47e252f40fd6504ccfa3dc9"
    },
    "366": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x4fb87c52Bb6D194f78cd4896E3e574028fedBAB9",
      "transactionHash": "0xa414f07ecf75a1f09963a24e7d12e55492f85c2600ab11a68e34fa70afdc3f1c"
    }
  },
  "schemaVersion": "3.2.4",
  "updatedAt": "2023-02-06T03:24:09.406Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}