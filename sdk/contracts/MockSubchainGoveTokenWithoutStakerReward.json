{
  "contractName": "MockSubchainGoveTokenWithoutStakerReward",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "initDistrWallet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initMintAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"initDistrWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initMintAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/jieyilong/Theta/go/src/github.com/thetatoken/theta-protocol-subchain-management/contracts/mocks/MockSubchainGoveTokenWithoutStakerReward.sol\":\"MockSubchainGoveTokenWithoutStakerReward\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"/Users/jieyilong/Theta/go/src/github.com/thetatoken/theta-protocol-subchain-management/contracts/mocks/MockSubchainGoveTokenWithoutStakerReward.sol\":{\"keccak256\":\"0x11933ca8879998755146b7123c82d5a43c4dc7564581ce4eb74f10590f50ae4a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://afc7ad595bdc4f1278ffded161de65770a9d422c1613d7f0112e812463890d11\",\"dweb:/ipfs/QmdGta7QF8Nr8PjxqbFQTSDbLeU7m32bBFCf13MiDeSJtY\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe0c8b625a79bac0fe80f17cfb521e072805cc9cef1c96a5caf45b264e74812fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fd1efc9ad061ef675bd50fb0c8e3c6f2952a09f8df0e3c688b8d81b8918838\",\"dweb:/ipfs/QmawN6PjTwy91pU7ANjCSgbsLc8TDA6hwu9GsFFaNSuhb5\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000d7838038062000d788339810160408190526200003491620002c7565b8351849084906200004d9060039060208501906200016a565b508051620000639060049060208401906200016a565b5050506200007882826200008260201b60201c565b50505050620003d4565b6001600160a01b038216620000dd5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000f191906200035a565b90915550506001600160a01b03821660009081526020819052604081208054839290620001209084906200035a565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001789062000381565b90600052602060002090601f0160209004810192826200019c5760008555620001e7565b82601f10620001b757805160ff1916838001178555620001e7565b82800160010185558215620001e7579182015b82811115620001e7578251825591602001919060010190620001ca565b50620001f5929150620001f9565b5090565b5b80821115620001f55760008155600101620001fa565b600082601f8301126200022257600080fd5b81516001600160401b03808211156200023f576200023f620003be565b604051601f8301601f19908116603f011681019082821181831017156200026a576200026a620003be565b816040528381526020925086838588010111156200028757600080fd5b600091505b83821015620002ab57858201830151818301840152908201906200028c565b83821115620002bd5760008385830101525b9695505050505050565b60008060008060808587031215620002de57600080fd5b84516001600160401b0380821115620002f657600080fd5b620003048883890162000210565b955060208701519150808211156200031b57600080fd5b506200032a8782880162000210565b604087015190945090506001600160a01b03811681146200034a57600080fd5b6060959095015193969295505050565b600082198211156200037c57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200039657607f821691505b60208210811415620003b857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61099480620003e46000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461014157806370a082311461015657806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101c0565b6040516100ce91906108a8565b60405180910390f35b6100ea6100e536600461087e565b610252565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a366004610842565b61026a565b604051601281526020016100ce565b6100ea61013c36600461087e565b61028e565b61015461014f36600461087e565b6102b0565b005b6100fe6101643660046107ed565b6001600160a01b031660009081526020819052604090205490565b6100c16102be565b6100ea61019536600461087e565b6102cd565b6100ea6101a836600461087e565b61034d565b6100fe6101bb36600461080f565b61035b565b6060600380546101cf90610923565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb90610923565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b600033610260818585610386565b5060019392505050565b6000336102788582856104aa565b610283858585610524565b506001949350505050565b6000336102608185856102a1838361035b565b6102ab91906108fd565b610386565b6102ba82826106f2565b5050565b6060600480546101cf90610923565b600033816102db828661035b565b9050838110156103405760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102838286868403610386565b600033610260818585610524565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103e85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610337565b6001600160a01b0382166104495760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610337565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104b6848461035b565b9050600019811461051e57818110156105115760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610337565b61051e8484848403610386565b50505050565b6001600160a01b0383166105885760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610337565b6001600160a01b0382166105ea5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610337565b6001600160a01b038316600090815260208190526040902054818110156106625760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610337565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106999084906108fd565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106e591815260200190565b60405180910390a361051e565b6001600160a01b0382166107485760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610337565b806002600082825461075a91906108fd565b90915550506001600160a01b038216600090815260208190526040812080548392906107879084906108fd565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b03811681146107e857600080fd5b919050565b6000602082840312156107ff57600080fd5b610808826107d1565b9392505050565b6000806040838503121561082257600080fd5b61082b836107d1565b9150610839602084016107d1565b90509250929050565b60008060006060848603121561085757600080fd5b610860846107d1565b925061086e602085016107d1565b9150604084013590509250925092565b6000806040838503121561089157600080fd5b61089a836107d1565b946020939093013593505050565b600060208083528351808285015260005b818110156108d5578581018301518582016040015282016108b9565b818111156108e7576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561091e57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061093757607f821691505b6020821081141561095857634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220679f4d77f33d1197ff83eabc2bb9b4d130dce98487d35d3d12e66a8c7cfa498164736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461014157806370a082311461015657806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101c0565b6040516100ce91906108a8565b60405180910390f35b6100ea6100e536600461087e565b610252565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a366004610842565b61026a565b604051601281526020016100ce565b6100ea61013c36600461087e565b61028e565b61015461014f36600461087e565b6102b0565b005b6100fe6101643660046107ed565b6001600160a01b031660009081526020819052604090205490565b6100c16102be565b6100ea61019536600461087e565b6102cd565b6100ea6101a836600461087e565b61034d565b6100fe6101bb36600461080f565b61035b565b6060600380546101cf90610923565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb90610923565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b600033610260818585610386565b5060019392505050565b6000336102788582856104aa565b610283858585610524565b506001949350505050565b6000336102608185856102a1838361035b565b6102ab91906108fd565b610386565b6102ba82826106f2565b5050565b6060600480546101cf90610923565b600033816102db828661035b565b9050838110156103405760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102838286868403610386565b600033610260818585610524565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103e85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610337565b6001600160a01b0382166104495760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610337565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104b6848461035b565b9050600019811461051e57818110156105115760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610337565b61051e8484848403610386565b50505050565b6001600160a01b0383166105885760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610337565b6001600160a01b0382166105ea5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610337565b6001600160a01b038316600090815260208190526040902054818110156106625760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610337565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106999084906108fd565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106e591815260200190565b60405180910390a361051e565b6001600160a01b0382166107485760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610337565b806002600082825461075a91906108fd565b90915550506001600160a01b038216600090815260208190526040812080548392906107879084906108fd565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b03811681146107e857600080fd5b919050565b6000602082840312156107ff57600080fd5b610808826107d1565b9392505050565b6000806040838503121561082257600080fd5b61082b836107d1565b9150610839602084016107d1565b90509250929050565b60008060006060848603121561085757600080fd5b610860846107d1565b925061086e602085016107d1565b9150604084013590509250925092565b6000806040838503121561089157600080fd5b61089a836107d1565b946020939093013593505050565b600060208083528351808285015260005b818110156108d5578581018301518582016040015282016108b9565b818111156108e7576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561091e57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061093757607f821691505b6020821081141561095857634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220679f4d77f33d1197ff83eabc2bb9b4d130dce98487d35d3d12e66a8c7cfa498164736f6c63430008070033",
  "immutableReferences": {},
  "sourceMap": "177:417:9:-:0;;;275:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2044:13:22;;422:4:9;;428:6;;2044:13:22;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2067:17:22;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;446:38:9::1;452:15;469:14;446:5;;;:38;;:::i;:::-;275:216:::0;;;;177:417;;8411:389:22;-1:-1:-1;;;;;8494:21:22;;8486:65;;;;-1:-1:-1;;;8486:65:22;;1902:2:36;8486:65:22;;;1884:21:36;1941:2;1921:18;;;1914:30;1980:33;1960:18;;;1953:61;2031:18;;8486:65:22;;;;;;;;8638:6;8622:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8654:18:22;;:9;:18;;;;;;;;;;:28;;8676:6;;8654:9;:28;;8676:6;;8654:28;:::i;:::-;;;;-1:-1:-1;;8697:37:22;;2206:25:36;;;-1:-1:-1;;;;;8697:37:22;;;8714:1;;8697:37;;2194:2:36;2179:18;8697:37:22;;;;;;;8411:389;;:::o;177:417:9:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;177:417:9;;;-1:-1:-1;177:417:9;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:36;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:36;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:36;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:36:o;904:791::-;1021:6;1029;1037;1045;1098:3;1086:9;1077:7;1073:23;1069:33;1066:53;;;1115:1;1112;1105:12;1066:53;1142:16;;-1:-1:-1;;;;;1207:14:36;;;1204:34;;;1234:1;1231;1224:12;1204:34;1257:61;1310:7;1301:6;1290:9;1286:22;1257:61;:::i;:::-;1247:71;;1364:2;1353:9;1349:18;1343:25;1327:41;;1393:2;1383:8;1380:16;1377:36;;;1409:1;1406;1399:12;1377:36;;1432:63;1487:7;1476:8;1465:9;1461:24;1432:63;:::i;:::-;1538:2;1523:18;;1517:25;1422:73;;-1:-1:-1;1517:25:36;-1:-1:-1;;;;;;1571:31:36;;1561:42;;1551:70;;1617:1;1614;1607:12;1551:70;1685:2;1670:18;;;;1664:25;904:791;;;;-1:-1:-1;;;904:791:36:o;2242:225::-;2282:3;2313:1;2309:6;2306:1;2303:13;2300:136;;;2358:10;2353:3;2349:20;2346:1;2339:31;2393:4;2390:1;2383:15;2421:4;2418:1;2411:15;2300:136;-1:-1:-1;2452:9:36;;2242:225::o;2472:380::-;2551:1;2547:12;;;;2594;;;2615:61;;2669:4;2661:6;2657:17;2647:27;;2615:61;2722:2;2714:6;2711:14;2691:18;2688:38;2685:161;;;2768:10;2763:3;2759:20;2756:1;2749:31;2803:4;2800:1;2793:15;2831:4;2828:1;2821:15;2685:161;;2472:380;;;:::o;2857:127::-;2918:10;2913:3;2909:20;2906:1;2899:31;2949:4;2946:1;2939:15;2973:4;2970:1;2963:15;2857:127;177:417:9;;;;;;",
  "deployedSourceMap": "177:417:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1405:14:36;;1398:22;1380:41;;1368:2;1353:18;4433:197:22;1240:187:36;3244:106:22;3331:12;;3244:106;;;5329:25:36;;;5317:2;5302:18;3244:106:22;5183:177:36;5192:286:22;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;5507:36:36;;5495:2;5480:18;3093:91:22;5365:184:36;5873:234:22;;;;;;:::i;:::-;;:::i;497:95:9:-;;;;;;:::i;:::-;;:::i;:::-;;3408:125:22;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:22;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;;:::i;2156:98::-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:30;4570:32:22;719:10:30;4586:7:22;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:22;;4433:197;-1:-1:-1;;;4433:197:22:o;5192:286::-;5319:4;719:10:30;5375:38:22;5391:4;719:10:30;5406:6:22;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:22;;5192:286;-1:-1:-1;;;;5192:286:22:o;5873:234::-;5961:4;719:10:30;6015:64:22;719:10:30;6031:7:22;6068:10;6040:25;719:10:30;6031:7:22;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;497:95:9:-;563:22;569:7;578:6;563:5;:22::i;:::-;497:95;;:::o;2367:102:22:-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:30;6687:4:22;6768:25;719:10:30;6785:7:22;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:22;;4619:2:36;6803:85:22;;;4601:21:36;4658:2;4638:18;;;4631:30;4697:34;4677:18;;;4670:62;-1:-1:-1;;;4748:18:36;;;4741:35;4793:19;;6803:85:22;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:30;3862:28:22;719:10:30;3879:2:22;3883:6;3862:9;:28::i;3976:149::-;-1:-1:-1;;;;;4091:18:22;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;10119:370::-;-1:-1:-1;;;;;10250:19:22;;10242:68;;;;-1:-1:-1;;;10242:68:22;;4214:2:36;10242:68:22;;;4196:21:36;4253:2;4233:18;;;4226:30;4292:34;4272:18;;;4265:62;-1:-1:-1;;;4343:18:36;;;4336:34;4387:19;;10242:68:22;4012:400:36;10242:68:22;-1:-1:-1;;;;;10328:21:22;;10320:68;;;;-1:-1:-1;;;10320:68:22;;2640:2:36;10320:68:22;;;2622:21:36;2679:2;2659:18;;;2652:30;2718:34;2698:18;;;2691:62;-1:-1:-1;;;2769:18:36;;;2762:32;2811:19;;10320:68:22;2438:398:36;10320:68:22;-1:-1:-1;;;;;10399:18:22;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10450:32;;5329:25:36;;;10450:32:22;;5302:18:36;10450:32:22;;;;;;;10119:370;;;:::o;10770:441::-;10900:24;10927:25;10937:5;10944:7;10927:9;:25::i;:::-;10900:52;;-1:-1:-1;;10966:16:22;:37;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:22;;3043:2:36;11019:68:22;;;3025:21:36;3082:2;3062:18;;;3055:30;3121:31;3101:18;;;3094:59;3170:18;;11019:68:22;2841:353:36;11019:68:22;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10890:321;10770:441;;;:::o;7484:651::-;-1:-1:-1;;;;;7610:18:22;;7602:68;;;;-1:-1:-1;;;7602:68:22;;3808:2:36;7602:68:22;;;3790:21:36;3847:2;3827:18;;;3820:30;3886:34;3866:18;;;3859:62;-1:-1:-1;;;3937:18:36;;;3930:35;3982:19;;7602:68:22;3606:401:36;7602:68:22;-1:-1:-1;;;;;7688:16:22;;7680:64;;;;-1:-1:-1;;;7680:64:22;;2236:2:36;7680:64:22;;;2218:21:36;2275:2;2255:18;;;2248:30;2314:34;2294:18;;;2287:62;-1:-1:-1;;;2365:18:36;;;2358:33;2408:19;;7680:64:22;2034:399:36;7680:64:22;-1:-1:-1;;;;;7826:15:22;;7804:19;7826:15;;;;;;;;;;;7859:21;;;;7851:72;;;;-1:-1:-1;;;7851:72:22;;3401:2:36;7851:72:22;;;3383:21:36;3440:2;3420:18;;;3413:30;3479:34;3459:18;;;3452:62;-1:-1:-1;;;3530:18:36;;;3523:36;3576:19;;7851:72:22;3199:402:36;7851:72:22;-1:-1:-1;;;;;7957:15:22;;;:9;:15;;;;;;;;;;;7975:20;;;7957:38;;8015:13;;;;;;;;:23;;7989:6;;7957:9;8015:23;;7989:6;;8015:23;:::i;:::-;;;;;;;;8069:2;-1:-1:-1;;;;;8054:26:22;8063:4;-1:-1:-1;;;;;8054:26:22;;8073:6;8054:26;;;;5329:25:36;;5317:2;5302:18;;5183:177;8054:26:22;;;;;;;;8091:37;11795:121;8411:389;-1:-1:-1;;;;;8494:21:22;;8486:65;;;;-1:-1:-1;;;8486:65:22;;5025:2:36;8486:65:22;;;5007:21:36;5064:2;5044:18;;;5037:30;5103:33;5083:18;;;5076:61;5154:18;;8486:65:22;4823:355:36;8486:65:22;8638:6;8622:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8654:18:22;;:9;:18;;;;;;;;;;:28;;8676:6;;8654:9;:28;;8676:6;;8654:28;:::i;:::-;;;;-1:-1:-1;;8697:37:22;;5329:25:36;;;-1:-1:-1;;;;;8697:37:22;;;8714:1;;8697:37;;5317:2:36;5302:18;8697:37:22;;;;;;;497:95:9;;:::o;14:173:36:-;82:20;;-1:-1:-1;;;;;131:31:36;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:36:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:36:o;1432:597::-;1544:4;1573:2;1602;1591:9;1584:21;1634:6;1628:13;1677:6;1672:2;1661:9;1657:18;1650:34;1702:1;1712:140;1726:6;1723:1;1720:13;1712:140;;;1821:14;;;1817:23;;1811:30;1787:17;;;1806:2;1783:26;1776:66;1741:10;;1712:140;;;1870:6;1867:1;1864:13;1861:91;;;1940:1;1935:2;1926:6;1915:9;1911:22;1907:31;1900:42;1861:91;-1:-1:-1;2013:2:36;1992:15;-1:-1:-1;;1988:29:36;1973:45;;;;2020:2;1969:54;;1432:597;-1:-1:-1;;;1432:597:36:o;5554:225::-;5594:3;5625:1;5621:6;5618:1;5615:13;5612:136;;;5670:10;5665:3;5661:20;5658:1;5651:31;5705:4;5702:1;5695:15;5733:4;5730:1;5723:15;5612:136;-1:-1:-1;5764:9:36;;5554:225::o;5784:380::-;5863:1;5859:12;;;;5906;;;5927:61;;5981:4;5973:6;5969:17;5959:27;;5927:61;6034:2;6026:6;6023:14;6003:18;6000:38;5997:161;;;6080:10;6075:3;6071:20;6068:1;6061:31;6115:4;6112:1;6105:15;6143:4;6140:1;6133:15;5997:161;;5784:380;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity ^0.8.7;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract MockSubchainGoveTokenWithoutStakerReward is ERC20 {\n    using SafeMath for uint256;\n\n    constructor(\n        string memory name,\n        string memory symbol,\n        address initDistrWallet,\n        uint256 initMintAmount\n    ) ERC20(name, symbol) {\n        _mint(initDistrWallet, initMintAmount);\n    }\n\n    function mint(address account, uint256 amount) external {\n        _mint(account, amount);\n    }\n}\n",
  "sourcePath": "/Users/jieyilong/Theta/go/src/github.com/thetatoken/theta-protocol-subchain-management/contracts/mocks/MockSubchainGoveTokenWithoutStakerReward.sol",
  "ast": {
    "absolutePath": "/Users/jieyilong/Theta/go/src/github.com/thetatoken/theta-protocol-subchain-management/contracts/mocks/MockSubchainGoveTokenWithoutStakerReward.sol",
    "exportedSymbols": {
      "Context": [
        13806
      ],
      "ERC20": [
        12359
      ],
      "IERC20": [
        12437
      ],
      "IERC20Metadata": [
        12462
      ],
      "MockSubchainGoveTokenWithoutStakerReward": [
        10064
      ],
      "SafeMath": [
        14764
      ]
    },
    "id": 10065,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10022,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:9"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 10023,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10065,
        "sourceUnit": 14765,
        "src": "62:57:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 10024,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10065,
        "sourceUnit": 12360,
        "src": "120:55:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10025,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12359,
              "src": "230:5:9"
            },
            "id": 10026,
            "nodeType": "InheritanceSpecifier",
            "src": "230:5:9"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10064,
        "linearizedBaseContracts": [
          10064,
          12359,
          12462,
          12437,
          13806
        ],
        "name": "MockSubchainGoveTokenWithoutStakerReward",
        "nameLocation": "186:40:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10029,
            "libraryName": {
              "id": 10027,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14764,
              "src": "248:8:9"
            },
            "nodeType": "UsingForDirective",
            "src": "242:27:9",
            "typeName": {
              "id": 10028,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "261:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 10049,
              "nodeType": "Block",
              "src": "436:55:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10045,
                        "name": "initDistrWallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10035,
                        "src": "452:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10046,
                        "name": "initMintAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10037,
                        "src": "469:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10044,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12176,
                      "src": "446:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "446:38:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10048,
                  "nodeType": "ExpressionStatement",
                  "src": "446:38:9"
                }
              ]
            },
            "id": 10050,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 10040,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10031,
                    "src": "422:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 10041,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10033,
                    "src": "428:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 10042,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 10039,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12359,
                  "src": "416:5:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "416:19:9"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10031,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "310:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 10050,
                  "src": "296:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10030,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "296:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10033,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "338:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 10050,
                  "src": "324:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10032,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "324:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10035,
                  "mutability": "mutable",
                  "name": "initDistrWallet",
                  "nameLocation": "362:15:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 10050,
                  "src": "354:23:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10034,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "354:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10037,
                  "mutability": "mutable",
                  "name": "initMintAmount",
                  "nameLocation": "395:14:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 10050,
                  "src": "387:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "387:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "286:129:9"
            },
            "returnParameters": {
              "id": 10043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "436:0:9"
            },
            "scope": 10064,
            "src": "275:216:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10062,
              "nodeType": "Block",
              "src": "553:39:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10058,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10052,
                        "src": "569:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10059,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10054,
                        "src": "578:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10057,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12176,
                      "src": "563:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "563:22:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10061,
                  "nodeType": "ExpressionStatement",
                  "src": "563:22:9"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 10063,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "506:4:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10052,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "519:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 10063,
                  "src": "511:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10051,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "511:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10054,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "536:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 10063,
                  "src": "528:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10053,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "510:33:9"
            },
            "returnParameters": {
              "id": 10056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "553:0:9"
            },
            "scope": 10064,
            "src": "497:95:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10065,
        "src": "177:417:9",
        "usedErrors": []
      }
    ],
    "src": "37:558:9"
  },
  "legacyAST": {
    "absolutePath": "/Users/jieyilong/Theta/go/src/github.com/thetatoken/theta-protocol-subchain-management/contracts/mocks/MockSubchainGoveTokenWithoutStakerReward.sol",
    "exportedSymbols": {
      "Context": [
        13806
      ],
      "ERC20": [
        12359
      ],
      "IERC20": [
        12437
      ],
      "IERC20Metadata": [
        12462
      ],
      "MockSubchainGoveTokenWithoutStakerReward": [
        10064
      ],
      "SafeMath": [
        14764
      ]
    },
    "id": 10065,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10022,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:9"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 10023,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10065,
        "sourceUnit": 14765,
        "src": "62:57:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 10024,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10065,
        "sourceUnit": 12360,
        "src": "120:55:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10025,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12359,
              "src": "230:5:9"
            },
            "id": 10026,
            "nodeType": "InheritanceSpecifier",
            "src": "230:5:9"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10064,
        "linearizedBaseContracts": [
          10064,
          12359,
          12462,
          12437,
          13806
        ],
        "name": "MockSubchainGoveTokenWithoutStakerReward",
        "nameLocation": "186:40:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10029,
            "libraryName": {
              "id": 10027,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14764,
              "src": "248:8:9"
            },
            "nodeType": "UsingForDirective",
            "src": "242:27:9",
            "typeName": {
              "id": 10028,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "261:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 10049,
              "nodeType": "Block",
              "src": "436:55:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10045,
                        "name": "initDistrWallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10035,
                        "src": "452:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10046,
                        "name": "initMintAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10037,
                        "src": "469:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10044,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12176,
                      "src": "446:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "446:38:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10048,
                  "nodeType": "ExpressionStatement",
                  "src": "446:38:9"
                }
              ]
            },
            "id": 10050,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 10040,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10031,
                    "src": "422:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 10041,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10033,
                    "src": "428:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 10042,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 10039,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12359,
                  "src": "416:5:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "416:19:9"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10031,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "310:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 10050,
                  "src": "296:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10030,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "296:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10033,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "338:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 10050,
                  "src": "324:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10032,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "324:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10035,
                  "mutability": "mutable",
                  "name": "initDistrWallet",
                  "nameLocation": "362:15:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 10050,
                  "src": "354:23:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10034,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "354:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10037,
                  "mutability": "mutable",
                  "name": "initMintAmount",
                  "nameLocation": "395:14:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 10050,
                  "src": "387:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "387:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "286:129:9"
            },
            "returnParameters": {
              "id": 10043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "436:0:9"
            },
            "scope": 10064,
            "src": "275:216:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10062,
              "nodeType": "Block",
              "src": "553:39:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10058,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10052,
                        "src": "569:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10059,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10054,
                        "src": "578:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10057,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12176,
                      "src": "563:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "563:22:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10061,
                  "nodeType": "ExpressionStatement",
                  "src": "563:22:9"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 10063,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "506:4:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10052,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "519:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 10063,
                  "src": "511:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10051,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "511:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10054,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "536:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 10063,
                  "src": "528:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10053,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "510:33:9"
            },
            "returnParameters": {
              "id": 10056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "553:0:9"
            },
            "scope": 10064,
            "src": "497:95:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10065,
        "src": "177:417:9",
        "usedErrors": []
      }
    ],
    "src": "37:558:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.4",
  "updatedAt": "2023-01-31T01:05:47.710Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}